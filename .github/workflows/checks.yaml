name: Code Quality Checks

on:
  push:
    branches:
      - dev
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Create .env file
        run: |
          echo "DJANGO_ENV=dev" >> $GITHUB_WORKSPACE/.env
          echo "DB_NAME=${{ secrets.PG_DB }}" >> $GITHUB_WORKSPACE/.env
          echo "DB_USER=${{ secrets.PG_USER }}" >> $GITHUB_WORKSPACE/.env
          echo "DB_PASSWORD=${{ secrets.PG_PASSWORD }}" >> $GITHUB_WORKSPACE/.env
          echo "DB_HOST=localhost" >> $GITHUB_WORKSPACE/.env
          echo "DB_PORT=5432" >> $GITHUB_WORKSPACE/.env

      - name: Create secrets.json
        run: |
          echo '${{ secrets.SECRETS_JSON }}' > $GITHUB_WORKSPACE/secrets.json

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install Packages & Libraries
        run: |
          poetry install

      - name: Run isort (Import sorting)
        run: |
          poetry run isort . --check --diff

      - name: Run black (Code formatting)
        run: |
          poetry run black . --check

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ secrets.PG_USER }}; do
            sleep 1
          done

      - name: Run Django Migration
        run: |
          poetry run python manage.py migrate  # `makemigrations` 제거

      - name: Test python project
        run: |
          poetry run python manage.py test
